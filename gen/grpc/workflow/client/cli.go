// Code generated by goa v3.3.1, DO NOT EDIT.
//
// workflow gRPC client CLI support package
//
// Command:
// $ goa gen github.com/fuseml/fuseml-core/design

package client

import (
	"encoding/json"
	"fmt"

	workflowpb "github.com/fuseml/fuseml-core/gen/grpc/workflow/pb"
	workflow "github.com/fuseml/fuseml-core/gen/workflow"
)

// BuildListPayload builds the payload for the workflow list endpoint from CLI
// flags.
func BuildListPayload(workflowListMessage string) (*workflow.ListPayload, error) {
	var err error
	var message workflowpb.ListRequest
	{
		if workflowListMessage != "" {
			err = json.Unmarshal([]byte(workflowListMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"name\": \"workflowA\"\n   }'")
			}
		}
	}
	v := &workflow.ListPayload{}
	if message.Name != "" {
		v.Name = &message.Name
	}

	return v, nil
}

// BuildRegisterPayload builds the payload for the workflow register endpoint
// from CLI flags.
func BuildRegisterPayload(workflowRegisterMessage string) (*workflow.Workflow, error) {
	var err error
	var message workflowpb.RegisterRequest
	{
		if workflowRegisterMessage != "" {
			err = json.Unmarshal([]byte(workflowRegisterMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"created\": \"2021-04-09T06:17:25Z\",\n      \"description\": \"This workflow is just trains a model and serve it\",\n      \"id\": \"76FB876C-96AC-91E7-BD21-B0C2988DDF65\",\n      \"inputs\": [\n         {\n            \"default\": \"mlflow-example\",\n            \"description\": \"An MLFlow project codeset\",\n            \"labels\": [\n               \"mlflow-project\"\n            ],\n            \"name\": \"mlflow-codeset\",\n            \"type\": \"codeset\"\n         },\n         {\n            \"default\": \"mlflow-example\",\n            \"description\": \"An MLFlow project codeset\",\n            \"labels\": [\n               \"mlflow-project\"\n            ],\n            \"name\": \"mlflow-codeset\",\n            \"type\": \"codeset\"\n         },\n         {\n            \"default\": \"mlflow-example\",\n            \"description\": \"An MLFlow project codeset\",\n            \"labels\": [\n               \"mlflow-project\"\n            ],\n            \"name\": \"mlflow-codeset\",\n            \"type\": \"codeset\"\n         },\n         {\n            \"default\": \"mlflow-example\",\n            \"description\": \"An MLFlow project codeset\",\n            \"labels\": [\n               \"mlflow-project\"\n            ],\n            \"name\": \"mlflow-codeset\",\n            \"type\": \"codeset\"\n         }\n      ],\n      \"name\": \"TrainAndServe\",\n      \"outputs\": [\n         {\n            \"description\": \"The URL where the exposed prediction service endpoint can be contacted to run predictions.\",\n            \"name\": \"prediction-url\",\n            \"type\": \"string\"\n         },\n         {\n            \"description\": \"The URL where the exposed prediction service endpoint can be contacted to run predictions.\",\n            \"name\": \"prediction-url\",\n            \"type\": \"string\"\n         }\n      ],\n      \"steps\": [\n         {\n            \"env\": [\n               {\n                  \"name\": \"PATH\",\n                  \"value\": \"/project\"\n               },\n               {\n                  \"name\": \"PATH\",\n                  \"value\": \"/project\"\n               }\n            ],\n            \"image\": \"ghcr.io/fuseml/kfserving-predictor:1.0\",\n            \"inputs\": [\n               {\n                  \"codeset\": {\n                     \"name\": \"mlflow-project\",\n                     \"path\": \"/project\"\n                  },\n                  \"name\": \"model-uri\",\n                  \"value\": \"s3://mlflow-artifacts/3/c7ae3b0e6fd44b4b96f7066c66672551/artifacts/model\"\n               },\n               {\n                  \"codeset\": {\n                     \"name\": \"mlflow-project\",\n                     \"path\": \"/project\"\n                  },\n                  \"name\": \"model-uri\",\n                  \"value\": \"s3://mlflow-artifacts/3/c7ae3b0e6fd44b4b96f7066c66672551/artifacts/model\"\n               },\n               {\n                  \"codeset\": {\n                     \"name\": \"mlflow-project\",\n                     \"path\": \"/project\"\n                  },\n                  \"name\": \"model-uri\",\n                  \"value\": \"s3://mlflow-artifacts/3/c7ae3b0e6fd44b4b96f7066c66672551/artifacts/model\"\n               }\n            ],\n            \"name\": \"predictor\",\n            \"outputs\": [\n               {\n                  \"image\": {\n                     \"dockerfile\": \"/project/.fuseml/Dockerfile\",\n                     \"name\": \"registry.fuseml-registry/mlflow-project/mlflow-codeset:0.1\"\n                  },\n                  \"name\": \"model-uri\"\n               },\n               {\n                  \"image\": {\n                     \"dockerfile\": \"/project/.fuseml/Dockerfile\",\n                     \"name\": \"registry.fuseml-registry/mlflow-project/mlflow-codeset:0.1\"\n                  },\n                  \"name\": \"model-uri\"\n               },\n               {\n                  \"image\": {\n                     \"dockerfile\": \"/project/.fuseml/Dockerfile\",\n                     \"name\": \"registry.fuseml-registry/mlflow-project/mlflow-codeset:0.1\"\n                  },\n                  \"name\": \"model-uri\"\n               }\n            ]\n         },\n         {\n            \"env\": [\n               {\n                  \"name\": \"PATH\",\n                  \"value\": \"/project\"\n               },\n               {\n                  \"name\": \"PATH\",\n                  \"value\": \"/project\"\n               }\n            ],\n            \"image\": \"ghcr.io/fuseml/kfserving-predictor:1.0\",\n            \"inputs\": [\n               {\n                  \"codeset\": {\n                     \"name\": \"mlflow-project\",\n                     \"path\": \"/project\"\n                  },\n                  \"name\": \"model-uri\",\n                  \"value\": \"s3://mlflow-artifacts/3/c7ae3b0e6fd44b4b96f7066c66672551/artifacts/model\"\n               },\n               {\n                  \"codeset\": {\n                     \"name\": \"mlflow-project\",\n                     \"path\": \"/project\"\n                  },\n                  \"name\": \"model-uri\",\n                  \"value\": \"s3://mlflow-artifacts/3/c7ae3b0e6fd44b4b96f7066c66672551/artifacts/model\"\n               },\n               {\n                  \"codeset\": {\n                     \"name\": \"mlflow-project\",\n                     \"path\": \"/project\"\n                  },\n                  \"name\": \"model-uri\",\n                  \"value\": \"s3://mlflow-artifacts/3/c7ae3b0e6fd44b4b96f7066c66672551/artifacts/model\"\n               }\n            ],\n            \"name\": \"predictor\",\n            \"outputs\": [\n               {\n                  \"image\": {\n                     \"dockerfile\": \"/project/.fuseml/Dockerfile\",\n                     \"name\": \"registry.fuseml-registry/mlflow-project/mlflow-codeset:0.1\"\n                  },\n                  \"name\": \"model-uri\"\n               },\n               {\n                  \"image\": {\n                     \"dockerfile\": \"/project/.fuseml/Dockerfile\",\n                     \"name\": \"registry.fuseml-registry/mlflow-project/mlflow-codeset:0.1\"\n                  },\n                  \"name\": \"model-uri\"\n               },\n               {\n                  \"image\": {\n                     \"dockerfile\": \"/project/.fuseml/Dockerfile\",\n                     \"name\": \"registry.fuseml-registry/mlflow-project/mlflow-codeset:0.1\"\n                  },\n                  \"name\": \"model-uri\"\n               }\n            ]\n         },\n         {\n            \"env\": [\n               {\n                  \"name\": \"PATH\",\n                  \"value\": \"/project\"\n               },\n               {\n                  \"name\": \"PATH\",\n                  \"value\": \"/project\"\n               }\n            ],\n            \"image\": \"ghcr.io/fuseml/kfserving-predictor:1.0\",\n            \"inputs\": [\n               {\n                  \"codeset\": {\n                     \"name\": \"mlflow-project\",\n                     \"path\": \"/project\"\n                  },\n                  \"name\": \"model-uri\",\n                  \"value\": \"s3://mlflow-artifacts/3/c7ae3b0e6fd44b4b96f7066c66672551/artifacts/model\"\n               },\n               {\n                  \"codeset\": {\n                     \"name\": \"mlflow-project\",\n                     \"path\": \"/project\"\n                  },\n                  \"name\": \"model-uri\",\n                  \"value\": \"s3://mlflow-artifacts/3/c7ae3b0e6fd44b4b96f7066c66672551/artifacts/model\"\n               },\n               {\n                  \"codeset\": {\n                     \"name\": \"mlflow-project\",\n                     \"path\": \"/project\"\n                  },\n                  \"name\": \"model-uri\",\n                  \"value\": \"s3://mlflow-artifacts/3/c7ae3b0e6fd44b4b96f7066c66672551/artifacts/model\"\n               }\n            ],\n            \"name\": \"predictor\",\n            \"outputs\": [\n               {\n                  \"image\": {\n                     \"dockerfile\": \"/project/.fuseml/Dockerfile\",\n                     \"name\": \"registry.fuseml-registry/mlflow-project/mlflow-codeset:0.1\"\n                  },\n                  \"name\": \"model-uri\"\n               },\n               {\n                  \"image\": {\n                     \"dockerfile\": \"/project/.fuseml/Dockerfile\",\n                     \"name\": \"registry.fuseml-registry/mlflow-project/mlflow-codeset:0.1\"\n                  },\n                  \"name\": \"model-uri\"\n               },\n               {\n                  \"image\": {\n                     \"dockerfile\": \"/project/.fuseml/Dockerfile\",\n                     \"name\": \"registry.fuseml-registry/mlflow-project/mlflow-codeset:0.1\"\n                  },\n                  \"name\": \"model-uri\"\n               }\n            ]\n         },\n         {\n            \"env\": [\n               {\n                  \"name\": \"PATH\",\n                  \"value\": \"/project\"\n               },\n               {\n                  \"name\": \"PATH\",\n                  \"value\": \"/project\"\n               }\n            ],\n            \"image\": \"ghcr.io/fuseml/kfserving-predictor:1.0\",\n            \"inputs\": [\n               {\n                  \"codeset\": {\n                     \"name\": \"mlflow-project\",\n                     \"path\": \"/project\"\n                  },\n                  \"name\": \"model-uri\",\n                  \"value\": \"s3://mlflow-artifacts/3/c7ae3b0e6fd44b4b96f7066c66672551/artifacts/model\"\n               },\n               {\n                  \"codeset\": {\n                     \"name\": \"mlflow-project\",\n                     \"path\": \"/project\"\n                  },\n                  \"name\": \"model-uri\",\n                  \"value\": \"s3://mlflow-artifacts/3/c7ae3b0e6fd44b4b96f7066c66672551/artifacts/model\"\n               },\n               {\n                  \"codeset\": {\n                     \"name\": \"mlflow-project\",\n                     \"path\": \"/project\"\n                  },\n                  \"name\": \"model-uri\",\n                  \"value\": \"s3://mlflow-artifacts/3/c7ae3b0e6fd44b4b96f7066c66672551/artifacts/model\"\n               }\n            ],\n            \"name\": \"predictor\",\n            \"outputs\": [\n               {\n                  \"image\": {\n                     \"dockerfile\": \"/project/.fuseml/Dockerfile\",\n                     \"name\": \"registry.fuseml-registry/mlflow-project/mlflow-codeset:0.1\"\n                  },\n                  \"name\": \"model-uri\"\n               },\n               {\n                  \"image\": {\n                     \"dockerfile\": \"/project/.fuseml/Dockerfile\",\n                     \"name\": \"registry.fuseml-registry/mlflow-project/mlflow-codeset:0.1\"\n                  },\n                  \"name\": \"model-uri\"\n               },\n               {\n                  \"image\": {\n                     \"dockerfile\": \"/project/.fuseml/Dockerfile\",\n                     \"name\": \"registry.fuseml-registry/mlflow-project/mlflow-codeset:0.1\"\n                  },\n                  \"name\": \"model-uri\"\n               }\n            ]\n         }\n      ]\n   }'")
			}
		}
	}
	v := &workflow.Workflow{
		Name: message.Name,
	}
	if message.Id != "" {
		v.ID = &message.Id
	}
	if message.Created != "" {
		v.Created = &message.Created
	}
	if message.Description != "" {
		v.Description = &message.Description
	}
	if message.Inputs != nil {
		v.Inputs = make([]*workflow.WorkflowInput, len(message.Inputs))
		for i, val := range message.Inputs {
			v.Inputs[i] = &workflow.WorkflowInput{}
			if val.Name != "" {
				v.Inputs[i].Name = &val.Name
			}
			if val.Description != "" {
				v.Inputs[i].Description = &val.Description
			}
			if val.Type != "" {
				v.Inputs[i].Type = &val.Type
			}
			if val.Default != "" {
				v.Inputs[i].Default = &val.Default
			}
			if val.Labels != nil {
				v.Inputs[i].Labels = make([]string, len(val.Labels))
				for j, val := range val.Labels {
					v.Inputs[i].Labels[j] = val
				}
			}
		}
	}
	if message.Outputs != nil {
		v.Outputs = make([]*workflow.WorkflowOutput, len(message.Outputs))
		for i, val := range message.Outputs {
			v.Outputs[i] = &workflow.WorkflowOutput{}
			if val.Name != "" {
				v.Outputs[i].Name = &val.Name
			}
			if val.Description != "" {
				v.Outputs[i].Description = &val.Description
			}
			if val.Type != "" {
				v.Outputs[i].Type = &val.Type
			}
		}
	}
	if message.Steps != nil {
		v.Steps = make([]*workflow.WorkflowStep, len(message.Steps))
		for i, val := range message.Steps {
			v.Steps[i] = &workflow.WorkflowStep{}
			if val.Name != "" {
				v.Steps[i].Name = &val.Name
			}
			if val.Image != "" {
				v.Steps[i].Image = &val.Image
			}
			if val.Inputs != nil {
				v.Steps[i].Inputs = make([]*workflow.WorkflowStepInput, len(val.Inputs))
				for j, val := range val.Inputs {
					v.Steps[i].Inputs[j] = &workflow.WorkflowStepInput{}
					if val.Name != "" {
						v.Steps[i].Inputs[j].Name = &val.Name
					}
					if val.Value != "" {
						v.Steps[i].Inputs[j].Value = &val.Value
					}
					if val.Codeset != nil {
						v.Steps[i].Inputs[j].Codeset = protobufWorkflowpbStepInputCodesetToWorkflowStepInputCodeset(val.Codeset)
					}
				}
			}
			if val.Outputs != nil {
				v.Steps[i].Outputs = make([]*workflow.WorkflowStepOutput, len(val.Outputs))
				for j, val := range val.Outputs {
					v.Steps[i].Outputs[j] = &workflow.WorkflowStepOutput{}
					if val.Name != "" {
						v.Steps[i].Outputs[j].Name = &val.Name
					}
					if val.Image != nil {
						v.Steps[i].Outputs[j].Image = protobufWorkflowpbStepOutputImageToWorkflowStepOutputImage(val.Image)
					}
				}
			}
			if val.Env != nil {
				v.Steps[i].Env = make([]*workflow.StepEnv, len(val.Env))
				for j, val := range val.Env {
					v.Steps[i].Env[j] = &workflow.StepEnv{}
					if val.Name != "" {
						v.Steps[i].Env[j].Name = &val.Name
					}
					if val.Value != "" {
						v.Steps[i].Env[j].Value = &val.Value
					}
				}
			}
		}
	}

	return v, nil
}

// BuildGetPayload builds the payload for the workflow get endpoint from CLI
// flags.
func BuildGetPayload(workflowGetMessage string) (*workflow.GetPayload, error) {
	var err error
	var message workflowpb.GetRequest
	{
		if workflowGetMessage != "" {
			err = json.Unmarshal([]byte(workflowGetMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"workflowNameOrId\": \"288BFD74-D973-18B5-FAA5-29ADF4569AC7\"\n   }'")
			}
		}
	}
	v := &workflow.GetPayload{
		WorkflowNameOrID: message.WorkflowNameOrId,
	}

	return v, nil
}
