// Code generated by goa v3.3.1, DO NOT EDIT.
//
// workflow client
//
// Command:
// $ goa gen github.com/fuseml/fuseml-core/design

package workflow

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "workflow" service client.
type Client struct {
	ListEndpoint     goa.Endpoint
	RegisterEndpoint goa.Endpoint
	GetEndpoint      goa.Endpoint
}

// NewClient initializes a "workflow" service client given the endpoints.
func NewClient(list, register, get goa.Endpoint) *Client {
	return &Client{
		ListEndpoint:     list,
		RegisterEndpoint: register,
		GetEndpoint:      get,
	}
}

// List calls the "list" endpoint of the "workflow" service.
// List may return the following errors:
//	- "NotFound" (type *goa.ServiceError): If the workflow is not found, should return 404 Not Found.
//	- error: internal error
func (c *Client) List(ctx context.Context, p *ListPayload) (res []*Workflow, err error) {
	var ires interface{}
	ires, err = c.ListEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]*Workflow), nil
}

// Register calls the "register" endpoint of the "workflow" service.
// Register may return the following errors:
//	- "BadRequest" (type *goa.ServiceError): If the workflow does not have the required fields, should return 400 Bad Request.
//	- error: internal error
func (c *Client) Register(ctx context.Context, p *Workflow) (res *Workflow, err error) {
	var ires interface{}
	ires, err = c.RegisterEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Workflow), nil
}

// Get calls the "get" endpoint of the "workflow" service.
// Get may return the following errors:
//	- "BadRequest" (type *goa.ServiceError): If name neither ID is given, should return 400 Bad Request.
//	- "NotFound" (type *goa.ServiceError): If there is no workflow with the given name/ID, should return 404 Not Found.
//	- error: internal error
func (c *Client) Get(ctx context.Context, p *GetPayload) (res *Workflow, err error) {
	var ires interface{}
	ires, err = c.GetEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Workflow), nil
}
